plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.jsj'
version = '1.0.0-SNAPSHOT' + new Date().format("yyyyMMddHHmmss")

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.2'
	implementation 'org.springframework.session:spring-session-jdbc' // 세션 저장소를 jdbc 로 설정하기 위한 의존성
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // oauth2 관련 의존성
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.jsoup:jsoup:1.15.4'
	// h2
//	implementation 'com.h2database:h2' // 인메모리 관계형 데이터베이스, 별도의 설치 없이 프로젝트 의존성만으로 관리 가능, 메모리에서 실행(재시작시 초기화-테스트 용이)
//	runtimeOnly 'com.h2database:h2'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// dto 변환 라이브러리
	implementation 'org.modelmapper:modelmapper:3.1.1'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	//google api
	implementation 'com.google.api-client:google-api-client:2.2.0'
	//json simple
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	//oauth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'	// 테스트용 가짜 인증사용자 추가
}

jar {
	enabled = false
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}